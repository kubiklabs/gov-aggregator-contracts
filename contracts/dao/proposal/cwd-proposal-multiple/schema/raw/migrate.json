{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "MigrateMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "from_v1"
      ],
      "properties": {
        "from_v1": {
          "type": "object",
          "required": [
            "close_proposal_on_execution_failure",
            "pre_propose_info"
          ],
          "properties": {
            "close_proposal_on_execution_failure": {
              "description": "This field was not present in DAO DAO v1. To migrate, a value must be specified.\n\nIf set to true proposals will be closed if their execution fails. Otherwise, proposals will remain open after execution failure. For example, with this enabled a proposal to send 5 tokens out of a DAO's reserve with 4 tokens would be closed when it is executed. With this disabled, that same proposal would remain open until the DAO's reserve was large enough for it to be executed.",
              "type": "boolean"
            },
            "pre_propose_info": {
              "description": "This field was not present in DAO DAO v1. To migrate, a value must be specified.\n\nThis contains information about how a pre-propose module may be configured. If set to \"AnyoneMayPropose\", there will be no pre-propose module and consequently, no deposit or membership checks when submitting a proposal. The \"ModuleMayPropose\" option allows for instantiating a prepropose module which will handle deposit verification and return logic.",
              "allOf": [
                {
                  "$ref": "#/definitions/PreProposeInfo"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "from_compatible"
      ],
      "properties": {
        "from_compatible": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Admin": {
      "description": "Information about the CosmWasm level admin of a contract. Used in conjunction with `ModuleInstantiateInfo` to instantiate modules.",
      "oneOf": [
        {
          "description": "Set the admin to a specified address.",
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "type": "object",
              "required": [
                "addr"
              ],
              "properties": {
                "addr": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Sets the admin as the core module address.",
          "type": "object",
          "required": [
            "core_module"
          ],
          "properties": {
            "core_module": {
              "type": "object"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
      "type": "string"
    },
    "ModuleInstantiateInfo": {
      "description": "Information needed to instantiate a module.",
      "type": "object",
      "required": [
        "code_id",
        "label",
        "msg"
      ],
      "properties": {
        "admin": {
          "description": "CosmWasm level admin of the instantiated contract. See: <https://docs.cosmwasm.com/docs/1.0/smart-contracts/migration>",
          "anyOf": [
            {
              "$ref": "#/definitions/Admin"
            },
            {
              "type": "null"
            }
          ]
        },
        "code_id": {
          "description": "Code ID of the contract to be instantiated.",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "label": {
          "description": "Label for the instantiated contract.",
          "type": "string"
        },
        "msg": {
          "description": "Instantiate message to be used to create the contract.",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        }
      }
    },
    "PreProposeInfo": {
      "oneOf": [
        {
          "description": "Anyone may create a proposal free of charge.",
          "type": "object",
          "required": [
            "anyone_may_propose"
          ],
          "properties": {
            "anyone_may_propose": {
              "type": "object"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "The module specified in INFO has exclusive rights to proposal creation.",
          "type": "object",
          "required": [
            "module_may_propose"
          ],
          "properties": {
            "module_may_propose": {
              "type": "object",
              "required": [
                "info"
              ],
              "properties": {
                "info": {
                  "$ref": "#/definitions/ModuleInstantiateInfo"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
