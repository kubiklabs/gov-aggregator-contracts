{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "register_balance_query"
      ],
      "properties": {
        "register_balance_query": {
          "type": "object",
          "required": [
            "addr",
            "connection_id",
            "denom",
            "update_period"
          ],
          "properties": {
            "addr": {
              "type": "string"
            },
            "connection_id": {
              "type": "string"
            },
            "denom": {
              "type": "string"
            },
            "update_period": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "register_delegator_delegations_query"
      ],
      "properties": {
        "register_delegator_delegations_query": {
          "type": "object",
          "required": [
            "connection_id",
            "delegator",
            "update_period",
            "validators"
          ],
          "properties": {
            "connection_id": {
              "type": "string"
            },
            "delegator": {
              "type": "string"
            },
            "update_period": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "validators": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "register_staking_validators_query"
      ],
      "properties": {
        "register_staking_validators_query": {
          "type": "object",
          "required": [
            "connection_id",
            "update_period",
            "validators"
          ],
          "properties": {
            "connection_id": {
              "type": "string"
            },
            "update_period": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "validators": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "register_government_proposals_query"
      ],
      "properties": {
        "register_government_proposals_query": {
          "type": "object",
          "required": [
            "connection_id",
            "proposals_ids",
            "update_period"
          ],
          "properties": {
            "connection_id": {
              "type": "string"
            },
            "proposals_ids": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "update_period": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "register_transfers_query"
      ],
      "properties": {
        "register_transfers_query": {
          "type": "object",
          "required": [
            "connection_id",
            "recipient",
            "update_period"
          ],
          "properties": {
            "connection_id": {
              "type": "string"
            },
            "min_height": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "recipient": {
              "type": "string"
            },
            "update_period": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "register_delegations_query"
      ],
      "properties": {
        "register_delegations_query": {
          "type": "object",
          "required": [
            "connection_id",
            "delegator",
            "update_period"
          ],
          "properties": {
            "connection_id": {
              "type": "string"
            },
            "delegator": {
              "type": "string"
            },
            "min_height": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "update_period": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_interchain_query"
      ],
      "properties": {
        "update_interchain_query": {
          "type": "object",
          "required": [
            "query_id"
          ],
          "properties": {
            "new_keys": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/definitions/KVKey"
              }
            },
            "new_recipient": {
              "type": [
                "string",
                "null"
              ]
            },
            "new_update_period": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "query_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "remove_interchain_query"
      ],
      "properties": {
        "remove_interchain_query": {
          "type": "object",
          "required": [
            "query_id"
          ],
          "properties": {
            "query_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
      "type": "string"
    },
    "KVKey": {
      "description": "Describes a KV key for which you want to get value from the storage on remote chain",
      "type": "object",
      "required": [
        "key",
        "path"
      ],
      "properties": {
        "key": {
          "description": "*key** is a key you want to read from the storage",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        },
        "path": {
          "description": "*path** is a path to the storage (storage prefix) where you want to read value by key (usually name of cosmos-packages module: 'staking', 'bank', etc.)",
          "type": "string"
        }
      }
    }
  }
}
